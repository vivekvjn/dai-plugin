{
  "scopeName": "source.c.plugin",
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "DAI plugin",
  "patterns": [
    {
      "include": "#section"
    },
    {
      "include": "#sectionValue"
    },
    {
      "include": "#pluginPoint"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#cBlock"
    }
  ],
  "repository": {
    "pluginName":{
      "patterns": [
        {
          "name": "constant.numeric.c.plugin.pluginName",
          "match": "(!?plugin_\\w+)"
        }
      ]
    },
    "section": {
      "patterns": [
        {
          "name": "variable.other.c.plugin.section",
          "match": "(?<=plugin\\.)\\b(start|group|desc|revision|apl|expand|switch|version|prereq|header|libgen|lib|dbupdater|exe|rootexe|files|segments|branch|oel|event|end)\\b"
        }
      ]
    },
    "sectionValue": {
      "patterns": [
        {
          "name": "constant.numeric.c.plugin.section.desc",
          "match": "(?<=plugin\\.desc)(?:\\s+)(\\w+( \\w+)*)(?:\\s)"
        },
        {
          "name": "constant.numeric.c.plugin.section.group",
          "match": "(?<=plugin\\.group)(?:\\s+)(\\w+)(?:\\s)"
        },
        {
          "name": "constant.numeric.c.plugin.section.version",
          "match": "(?<=plugin\\.version)(?:\\s+)((\\d+)(\\.+\\d+){2})(?:\\s)"
        },
        {
          "name": "constant.numeric.c.plugin.section.apl",
          "match": "(?<=plugin\\.apl)(?:\\s+)((\\d+)(\\.+\\d+){1})(?:\\s)"
        },
        {
          "name": "constant.numeric.c.plugin.section.revision",
          "match": "(?<=plugin\\.revision)(?:\\s+)([a-z0-9]+)(?:\\s)"
        },
        {
          "name": "constant.numeric.c.plugin.section.switch",
          "match": "(?<=plugin\\.switch)(?:\\s+)(\\w+)(?:\\s)"
        },
        {
          "include": "#pluginName"
        },
        {
          "name": "constant.numeric.c.plugin.section.switchCase",
          "match": "((?<=plugin\\.lib)|(?<=plugin\\.header)|(?<=plugin\\.files)|(?<=plugin\\.exe))(?:\\s+)(!?plugin_\\w+(\\s+plugin_\\w+)*)(?:\\s)"
        }
      ]
    },
    "pluginPoint": {
      "patterns": [
        {
          "name": "keyword.control.c.plugin.pluginPoint",
          "match": "^\\s*\\b(plugin)\\b"
        },
        {
          "name": "meta.define.c.plugin.pluginPoint",
          "match": "^\\s*>>(.*)"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.c.plugin",
          "match": "(^\\s*!.*)"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.c.plugin",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.c.plugin",
          "match": "\\\\."
        }
      ]
    },
    "cBlock": {
      "patterns": [
        {
          "include": "source.c",
          "name": "meta.embedded.block.c",
          "match": "^(?!\\s*(!|>>|plugin).*$).*"
        }
      ]
    }
  }
}
